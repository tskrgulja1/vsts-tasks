{
    "id": "E213FF0F-5D5C-4791-802D-52EA3E7BE1F1",
    "name": "PowerShell",
    "friendlyName": "PowerShell",
    "description": "This is an early preview. Run a PowerShell script on Windows, macOS, or Linux.",
    "helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613736)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 2,
        "Minor": 135,
        "Patch": 0
    },
    "releaseNotes": "This is an early preview. Script task consistency. Added support for macOS and Linux.",
    "minimumAgentVersion": "2.115.0",
    "showEnvironmentBlock": true,
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "targetType",
            "type": "radio",
            "label": "Type",
            "required": false,
            "defaultValue": "filePath",
            "helpMarkDown": "Target script type: File Path or Inline",
            "options": {
                "filePath": "File Path",
                "inline": "Inline"
            }
        },
        {
            "name": "filePath",
            "type": "filePath",
            "label": "Script Path",
            "visibleRule": "targetType = filePath",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "Path of the script to execute. Must be a fully qualified path or relative to $(System.DefaultWorkingDirectory)."
        },
        {
            "name": "arguments",
            "type": "string",
            "label": "Arguments",
            "visibleRule": "targetType = filePath",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Arguments passed to the PowerShell script. Either ordinal parameters or named parameters."
        },
        {
            "name": "script",
            "type": "multiLine",
            "label": "Script",
            "visibleRule": "targetType = inline",
            "required": true,
            "defaultValue": "# Write your powershell commands here.\n\nWrite-Host \"Hello World\"",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "5000"
            },
            "helpMarkDown": ""
        },
        {
            "name": "errorActionPreference",
            "type": "pickList",
            "label": "ErrorActionPreference",
            "required": false,
            "defaultValue": "stop",
            "options": {
                "stop": "Stop",
                "continue": "Continue",
                "silentlyContinue": "SilentlyContinue"
            },
            "helpMarkDown": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your script."
        },
        {
            "name": "failOnStderr",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream. Otherwise the task will rely on the exit code to determine failure.",
            "groupName": "advanced"
        },
        {
            "name": "ignoreLASTEXITCODE",
            "type": "boolean",
            "label": "Ignore $LASTEXITCODE",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not appended to the end of your script.",
            "groupName": "advanced"
        },
        {
            "name": "workingDirectory",
            "type": "filePath",
            "label": "Working Directory",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Working directory where the script is run.",
            "groupName": "advanced"
        }
    ],
    "instanceNameFormat": "PowerShell Script",
    "execution": {
        "PowerShell3": {
            "target": "powershell.ps1",
            "platforms": [
                "windows"
            ]
        },
        "Node": {
            "target": "powershell.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "GeneratingScript": "Generating script.",
        "JS_ExitCode": "PowerShell exited with code '%s'.",
        "JS_FormattedCommand": "Formatted command: %s",
        "JS_InvalidErrorActionPreference": "Invalid ErrorActionPreference '%s'. The value must be one of: 'Stop', 'Continue', or 'SilentlyContinue'",
        "JS_InvalidFilePath": "Invalid file path '%s'. A path to a .ps1 file is required.",
        "JS_Stderr": "PowerShell wrote one or more lines to the standard error stream.",
        "PS_ExitCode": "PowerShell exited with code '{0}'.",
        "PS_FormattedCommand": "Formatted command: {0}",
        "PS_InvalidErrorActionPreference": "Invalid ErrorActionPreference '{0}'. The value must be one of: 'Stop', 'Continue', or 'SilentlyContinue'",
        "PS_InvalidFilePath": "Invalid file path '{0}'. A path to a .ps1 file is required.",
        "PS_UnableToDetermineExitCode": "Unexpected exception. Unable to determine the exit code from powershell."
    }
}